//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.544
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://GatewayService", ConfigurationName="IGatewayService")]
public interface IGatewayService
{
    
    // CODEGEN: Parameter 'Data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action="urn:#StoreSensorData", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
    StoreSensorDataResponse StoreSensorData(StoreSensorDataRequest request);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:#RegisterDevice", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
    [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
    OperationResult RegisterDevice(Device Device);
    
    // CODEGEN: Generating message contract since the wrapper namespace () of message UpdateDeviceRequest does not match the default value (http://GatewayService)
    [System.ServiceModel.OperationContractAttribute(Action="urn:#UpdateDevice", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    UpdateDeviceResponse UpdateDevice(UpdateDeviceRequest request);
    
    // CODEGEN: Generating message contract since the wrapper namespace () of message RegisterSensorsRequest does not match the default value (http://GatewayService)
    [System.ServiceModel.OperationContractAttribute(Action="urn:#RegisterSensors", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    RegisterSensorsResponse RegisterSensors(RegisterSensorsRequest request);
    
    // CODEGEN: Generating message contract since the wrapper namespace () of message UpdateSensorRequest does not match the default value (http://GatewayService)
    [System.ServiceModel.OperationContractAttribute(Action="urn:#UpdateSensor", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    UpdateSensorResponse UpdateSensor(UpdateSensorRequest request);
    
    // CODEGEN: Generating message contract since the wrapper namespace () of message GetDevicesRequest does not match the default value (http://GatewayService)
    [System.ServiceModel.OperationContractAttribute(Action="urn:#GetDevices", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    GetDevicesResponse GetDevices(GetDevicesRequest request);
    
    // CODEGEN: Generating message contract since the wrapper namespace () of message GetSensorsForDeviceRequest does not match the default value (http://GatewayService)
    [System.ServiceModel.OperationContractAttribute(Action="urn:#GetSensors", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    GetSensorsForDeviceResponse GetSensorsForDevice(GetSensorsForDeviceRequest request);
    
    // CODEGEN: Generating message contract since the wrapper namespace () of message IsDeviceIdUsedRequest does not match the default value (http://GatewayService)
    [System.ServiceModel.OperationContractAttribute(Action="urn:#NewOperation", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    IsDeviceIdUsedResponse IsDeviceIdUsed(IsDeviceIdUsedRequest request);
    
    // CODEGEN: Generating message contract since the wrapper namespace () of message IsSensorIdRegisteredForDeviceRequest does not match the default value (http://GatewayService)
    [System.ServiceModel.OperationContractAttribute(Action="urn:#NewOperation", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    IsSensorIdRegisteredForDeviceResponse IsSensorIdRegisteredForDevice(IsSensorIdRegisteredForDeviceRequest request);
    
    // CODEGEN: Generating message contract since the wrapper namespace () of message GetSensorRequest does not match the default value (http://GatewayService)
    [System.ServiceModel.OperationContractAttribute(Action="urn:#NewOperation", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    GetSensorResponse GetSensor(GetSensorRequest request);
    
    // CODEGEN: Generating message contract since the wrapper namespace () of message GetSensorDataRequest does not match the default value (http://GatewayService)
    [System.ServiceModel.OperationContractAttribute(Action="urn:#NewOperation", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    GetSensorDataResponse GetSensorData(GetSensorDataRequest request);
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GatewayService")]
public partial class MultipleSensorData
{
    
    private string sensorIdField;
    
    private SensorData[] sensorDataField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public string SensorId
    {
        get
        {
            return this.sensorIdField;
        }
        set
        {
            this.sensorIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SensorData", IsNullable=true, Order=1)]
    public SensorData[] SensorData
    {
        get
        {
            return this.sensorDataField;
        }
        set
        {
            this.sensorDataField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GatewayService")]
public partial class SensorData
{
    
    private System.DateTime takenWhenField;
    
    private string valueField;
    
    /// <remarks/>
    public System.DateTime TakenWhen
    {
        get
        {
            return this.takenWhenField;
        }
        set
        {
            this.takenWhenField = value;
        }
    }
    
    /// <remarks/>
    public string Value
    {
        get
        {
            return this.valueField;
        }
        set
        {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GatewayService")]
public partial class VirtualSensorDefinition
{
    
    private SensorDataCalculationMode sensorDataCalculationModeField;
    
    private SensorDefinitionType sensorDefinitionTypeField;
    
    private string sensorDefinitionField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public SensorDataCalculationMode SensorDataCalculationMode
    {
        get
        {
            return this.sensorDataCalculationModeField;
        }
        set
        {
            this.sensorDataCalculationModeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public SensorDefinitionType SensorDefinitionType
    {
        get
        {
            return this.sensorDefinitionTypeField;
        }
        set
        {
            this.sensorDefinitionTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public string SensorDefinition
    {
        get
        {
            return this.sensorDefinitionField;
        }
        set
        {
            this.sensorDefinitionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GatewayService")]
public enum SensorDataCalculationMode
{
    
    /// <remarks/>
    Cyclic,
    
    /// <remarks/>
    OnChange,
    
    /// <remarks/>
    OnRequest,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GatewayService")]
public enum SensorDefinitionType
{
    
    /// <remarks/>
    Formula,
    
    /// <remarks/>
    FSharp_Expression,
    
    /// <remarks/>
    CSharp_Expression,
    
    /// <remarks/>
    IronPhyton,
    
    /// <remarks/>
    IronRuby,
    
    /// <remarks/>
    Assembly,
    
    /// <remarks/>
    SQL,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GatewayService")]
public partial class Sensor
{
    
    private string deviceIdField;
    
    private string idField;
    
    private string descriptionField;
    
    private SensorDataRetrievalMode sensorDataRetrievalModeField;
    
    private bool isVirtualSensorField;
    
    private bool shallSensorDataBePersistedField;
    
    private VirtualSensorDefinition virtualSensorDefinitionField;
    
    private string unitSymbolField;
    
    private SensorValueDataType sensorValueDataTypeField;
    
    private int pullFrequencyInSecsField;
    
    private PullModeCommunicationType pullModeCommunicationTypeField;
    
    private bool pullModeCommunicationTypeFieldSpecified;
    
    private string pullModeAssemblyTypeField;
    
    private string sensorCategoryField;
    
    public Sensor()
    {
        this.pullFrequencyInSecsField = 0;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public string DeviceId
    {
        get
        {
            return this.deviceIdField;
        }
        set
        {
            this.deviceIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public string Id
    {
        get
        {
            return this.idField;
        }
        set
        {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public string Description
    {
        get
        {
            return this.descriptionField;
        }
        set
        {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public SensorDataRetrievalMode SensorDataRetrievalMode
    {
        get
        {
            return this.sensorDataRetrievalModeField;
        }
        set
        {
            this.sensorDataRetrievalModeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public bool IsVirtualSensor
    {
        get
        {
            return this.isVirtualSensorField;
        }
        set
        {
            this.isVirtualSensorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=5)]
    public bool ShallSensorDataBePersisted
    {
        get
        {
            return this.shallSensorDataBePersistedField;
        }
        set
        {
            this.shallSensorDataBePersistedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=6)]
    public VirtualSensorDefinition VirtualSensorDefinition
    {
        get
        {
            return this.virtualSensorDefinitionField;
        }
        set
        {
            this.virtualSensorDefinitionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=7)]
    public string UnitSymbol
    {
        get
        {
            return this.unitSymbolField;
        }
        set
        {
            this.unitSymbolField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=8)]
    public SensorValueDataType SensorValueDataType
    {
        get
        {
            return this.sensorValueDataTypeField;
        }
        set
        {
            this.sensorValueDataTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=9)]
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int PullFrequencyInSecs
    {
        get
        {
            return this.pullFrequencyInSecsField;
        }
        set
        {
            this.pullFrequencyInSecsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=10)]
    public PullModeCommunicationType PullModeCommunicationType
    {
        get
        {
            return this.pullModeCommunicationTypeField;
        }
        set
        {
            this.pullModeCommunicationTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PullModeCommunicationTypeSpecified
    {
        get
        {
            return this.pullModeCommunicationTypeFieldSpecified;
        }
        set
        {
            this.pullModeCommunicationTypeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=11)]
    public string PullModeAssemblyType
    {
        get
        {
            return this.pullModeAssemblyTypeField;
        }
        set
        {
            this.pullModeAssemblyTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=12)]
    public string SensorCategory
    {
        get
        {
            return this.sensorCategoryField;
        }
        set
        {
            this.sensorCategoryField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GatewayService")]
public enum SensorDataRetrievalMode
{
    
    /// <remarks/>
    Pull,
    
    /// <remarks/>
    Push,
    
    /// <remarks/>
    Both,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GatewayService")]
public enum SensorValueDataType
{
    
    /// <remarks/>
    Bit,
    
    /// <remarks/>
    Int,
    
    /// <remarks/>
    Long,
    
    /// <remarks/>
    Decimal,
    
    /// <remarks/>
    String,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GatewayService")]
public enum PullModeCommunicationType
{
    
    /// <remarks/>
    REST,
    
    /// <remarks/>
    SOAP,
    
    /// <remarks/>
    Assembly,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GatewayService")]
public partial class Device
{
    
    private string idField;
    
    private string descriptionField;
    
    private string locNameField;
    
    private double locLatField;
    
    private bool locLatFieldSpecified;
    
    private double locLonField;
    
    private bool locLonFieldSpecified;
    
    private double locEleField;
    
    private bool locEleFieldSpecified;
    
    private string deviceIpAddressField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public string Id
    {
        get
        {
            return this.idField;
        }
        set
        {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public string Description
    {
        get
        {
            return this.descriptionField;
        }
        set
        {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public string LocName
    {
        get
        {
            return this.locNameField;
        }
        set
        {
            this.locNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public double LocLat
    {
        get
        {
            return this.locLatField;
        }
        set
        {
            this.locLatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool LocLatSpecified
    {
        get
        {
            return this.locLatFieldSpecified;
        }
        set
        {
            this.locLatFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public double LocLon
    {
        get
        {
            return this.locLonField;
        }
        set
        {
            this.locLonField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool LocLonSpecified
    {
        get
        {
            return this.locLonFieldSpecified;
        }
        set
        {
            this.locLonFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=5)]
    public double LocEle
    {
        get
        {
            return this.locEleField;
        }
        set
        {
            this.locEleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool LocEleSpecified
    {
        get
        {
            return this.locEleFieldSpecified;
        }
        set
        {
            this.locEleFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=6)]
    public string DeviceIpAddress
    {
        get
        {
            return this.deviceIpAddressField;
        }
        set
        {
            this.deviceIpAddressField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMultipleSensorDataResult))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetSensorResult))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetSensorsForDeviceResult))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDevicesResult))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(IsSensorIdRegisteredForDeviceResult))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(IsDeviceIdUsedResult))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GatewayService")]
public partial class OperationResult
{
    
    private bool successField;
    
    private string[] errorMessagesField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public bool Success
    {
        get
        {
            return this.successField;
        }
        set
        {
            this.successField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ErrorMessages", IsNullable=true, Order=1)]
    public string[] ErrorMessages
    {
        get
        {
            return this.errorMessagesField;
        }
        set
        {
            this.errorMessagesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GatewayService")]
public partial class GetMultipleSensorDataResult : OperationResult
{
    
    private MultipleSensorData[] sensorDataListField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlArrayItemAttribute("Data")]
    public MultipleSensorData[] SensorDataList
    {
        get
        {
            return this.sensorDataListField;
        }
        set
        {
            this.sensorDataListField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GatewayService")]
public partial class GetSensorResult : OperationResult
{
    
    private Sensor sensorField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public Sensor Sensor
    {
        get
        {
            return this.sensorField;
        }
        set
        {
            this.sensorField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GatewayService")]
public partial class GetSensorsForDeviceResult : OperationResult
{
    
    private Sensor[] sensorsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlArrayItemAttribute("Sensors", IsNullable=false)]
    public Sensor[] Sensors
    {
        get
        {
            return this.sensorsField;
        }
        set
        {
            this.sensorsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GatewayService")]
public partial class GetDevicesResult : OperationResult
{
    
    private Device[] devicesField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlArrayItemAttribute("Devices", IsNullable=false)]
    public Device[] Devices
    {
        get
        {
            return this.devicesField;
        }
        set
        {
            this.devicesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GatewayService")]
public partial class IsSensorIdRegisteredForDeviceResult : OperationResult
{
    
    private bool isRegisteredField;
    
    public IsSensorIdRegisteredForDeviceResult()
    {
        this.isRegisteredField = false;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public bool IsRegistered
    {
        get
        {
            return this.isRegisteredField;
        }
        set
        {
            this.isRegisteredField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GatewayService")]
public partial class IsDeviceIdUsedResult : OperationResult
{
    
    private bool isUsedField;
    
    public IsDeviceIdUsedResult()
    {
        this.isUsedField = false;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public bool IsUsed
    {
        get
        {
            return this.isUsedField;
        }
        set
        {
            this.isUsedField = value;
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="StoreSensorData", WrapperNamespace="http://GatewayService", IsWrapped=true)]
public partial class StoreSensorDataRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
    public string DeviceId;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
    [System.Xml.Serialization.XmlArrayAttribute()]
    [System.Xml.Serialization.XmlArrayItemAttribute("Data", Namespace="http://GatewayService")]
    public MultipleSensorData[] Data;
    
    public StoreSensorDataRequest()
    {
    }
    
    public StoreSensorDataRequest(string DeviceId, MultipleSensorData[] Data)
    {
        this.DeviceId = DeviceId;
        this.Data = Data;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="StoreSensorDataResponse", WrapperNamespace="http://GatewayService", IsWrapped=true)]
public partial class StoreSensorDataResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
    public OperationResult Result;
    
    public StoreSensorDataResponse()
    {
    }
    
    public StoreSensorDataResponse(OperationResult Result)
    {
        this.Result = Result;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDevice", WrapperNamespace="", IsWrapped=true)]
public partial class UpdateDeviceRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
    public Device Device;
    
    public UpdateDeviceRequest()
    {
    }
    
    public UpdateDeviceRequest(Device Device)
    {
        this.Device = Device;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDeviceResponse", WrapperNamespace="", IsWrapped=true)]
public partial class UpdateDeviceResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
    public OperationResult Result;
    
    public UpdateDeviceResponse()
    {
    }
    
    public UpdateDeviceResponse(OperationResult Result)
    {
        this.Result = Result;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="RegisterSensors", WrapperNamespace="", IsWrapped=true)]
public partial class RegisterSensorsRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
    [System.Xml.Serialization.XmlArrayAttribute()]
    [System.Xml.Serialization.XmlArrayItemAttribute("Sensors", Namespace="http://GatewayService", IsNullable=false)]
    public Sensor[] Sensors;
    
    public RegisterSensorsRequest()
    {
    }
    
    public RegisterSensorsRequest(Sensor[] Sensors)
    {
        this.Sensors = Sensors;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="RegisterSensorsResponse", WrapperNamespace="", IsWrapped=true)]
public partial class RegisterSensorsResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
    public OperationResult Result;
    
    public RegisterSensorsResponse()
    {
    }
    
    public RegisterSensorsResponse(OperationResult Result)
    {
        this.Result = Result;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSensor", WrapperNamespace="", IsWrapped=true)]
public partial class UpdateSensorRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
    public Sensor Sensor;
    
    public UpdateSensorRequest()
    {
    }
    
    public UpdateSensorRequest(Sensor Sensor)
    {
        this.Sensor = Sensor;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSensorResponse", WrapperNamespace="", IsWrapped=true)]
public partial class UpdateSensorResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
    public OperationResult Result;
    
    public UpdateSensorResponse()
    {
    }
    
    public UpdateSensorResponse(OperationResult Result)
    {
        this.Result = Result;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetDevices", WrapperNamespace="", IsWrapped=true)]
public partial class GetDevicesRequest
{
    
    public GetDevicesRequest()
    {
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetDevicesResponse", WrapperNamespace="", IsWrapped=true)]
public partial class GetDevicesResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
    public GetDevicesResult Result;
    
    public GetDevicesResponse()
    {
    }
    
    public GetDevicesResponse(GetDevicesResult Result)
    {
        this.Result = Result;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetSensorsForDevice", WrapperNamespace="", IsWrapped=true)]
public partial class GetSensorsForDeviceRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
    public string DeviceId;
    
    public GetSensorsForDeviceRequest()
    {
    }
    
    public GetSensorsForDeviceRequest(string DeviceId)
    {
        this.DeviceId = DeviceId;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetSensorsForDeviceResponse", WrapperNamespace="", IsWrapped=true)]
public partial class GetSensorsForDeviceResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
    public GetSensorsForDeviceResult Result;
    
    public GetSensorsForDeviceResponse()
    {
    }
    
    public GetSensorsForDeviceResponse(GetSensorsForDeviceResult Result)
    {
        this.Result = Result;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="IsDeviceIdUsed", WrapperNamespace="", IsWrapped=true)]
public partial class IsDeviceIdUsedRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
    public string DeviceId;
    
    public IsDeviceIdUsedRequest()
    {
    }
    
    public IsDeviceIdUsedRequest(string DeviceId)
    {
        this.DeviceId = DeviceId;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="IsDeviceIdUsedResponse", WrapperNamespace="", IsWrapped=true)]
public partial class IsDeviceIdUsedResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
    public IsDeviceIdUsedResult Result;
    
    public IsDeviceIdUsedResponse()
    {
    }
    
    public IsDeviceIdUsedResponse(IsDeviceIdUsedResult Result)
    {
        this.Result = Result;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="IsSensorIdRegisteredForDevice", WrapperNamespace="", IsWrapped=true)]
public partial class IsSensorIdRegisteredForDeviceRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
    public string DeviceId;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
    public string SensorId;
    
    public IsSensorIdRegisteredForDeviceRequest()
    {
    }
    
    public IsSensorIdRegisteredForDeviceRequest(string DeviceId, string SensorId)
    {
        this.DeviceId = DeviceId;
        this.SensorId = SensorId;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="IsSensorIdRegisteredForDeviceResponse", WrapperNamespace="", IsWrapped=true)]
public partial class IsSensorIdRegisteredForDeviceResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
    public IsSensorIdRegisteredForDeviceResult Result;
    
    public IsSensorIdRegisteredForDeviceResponse()
    {
    }
    
    public IsSensorIdRegisteredForDeviceResponse(IsSensorIdRegisteredForDeviceResult Result)
    {
        this.Result = Result;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetSensor", WrapperNamespace="", IsWrapped=true)]
public partial class GetSensorRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
    public string DeviceId;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
    public string SensorId;
    
    public GetSensorRequest()
    {
    }
    
    public GetSensorRequest(string DeviceId, string SensorId)
    {
        this.DeviceId = DeviceId;
        this.SensorId = SensorId;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetSensorResponse", WrapperNamespace="", IsWrapped=true)]
public partial class GetSensorResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
    public GetSensorResult Result;
    
    public GetSensorResponse()
    {
    }
    
    public GetSensorResponse(GetSensorResult Result)
    {
        this.Result = Result;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetSensorData", WrapperNamespace="", IsWrapped=true)]
public partial class GetSensorDataRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
    public string DeviceId;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
    [System.Xml.Serialization.XmlArrayAttribute()]
    [System.Xml.Serialization.XmlArrayItemAttribute("element", Namespace="http://GatewayService", IsNullable=false)]
    public string[] Sensors;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
    public System.DateTime TakenFrom;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
    public System.DateTime TakenUntil;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
    public int MaxValues;
    
    public GetSensorDataRequest()
    {
    }
    
    public GetSensorDataRequest(string DeviceId, string[] Sensors, System.DateTime TakenFrom, System.DateTime TakenUntil, int MaxValues)
    {
        this.DeviceId = DeviceId;
        this.Sensors = Sensors;
        this.TakenFrom = TakenFrom;
        this.TakenUntil = TakenUntil;
        this.MaxValues = MaxValues;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetSensorDataResponse", WrapperNamespace="", IsWrapped=true)]
public partial class GetSensorDataResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
    public GetMultipleSensorDataResult Result;
    
    public GetSensorDataResponse()
    {
    }
    
    public GetSensorDataResponse(GetMultipleSensorDataResult Result)
    {
        this.Result = Result;
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IGatewayServiceChannel : IGatewayService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GatewayServiceClient : System.ServiceModel.ClientBase<IGatewayService>, IGatewayService
{
    
    public GatewayServiceClient()
    {
    }
    
    public GatewayServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public GatewayServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public GatewayServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public GatewayServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    StoreSensorDataResponse IGatewayService.StoreSensorData(StoreSensorDataRequest request)
    {
        return base.Channel.StoreSensorData(request);
    }
    
    public OperationResult StoreSensorData(string DeviceId, MultipleSensorData[] Data)
    {
        StoreSensorDataRequest inValue = new StoreSensorDataRequest();
        inValue.DeviceId = DeviceId;
        inValue.Data = Data;
        StoreSensorDataResponse retVal = ((IGatewayService)(this)).StoreSensorData(inValue);
        return retVal.Result;
    }
    
    public OperationResult RegisterDevice(Device Device)
    {
        return base.Channel.RegisterDevice(Device);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    UpdateDeviceResponse IGatewayService.UpdateDevice(UpdateDeviceRequest request)
    {
        return base.Channel.UpdateDevice(request);
    }
    
    public OperationResult UpdateDevice(Device Device)
    {
        UpdateDeviceRequest inValue = new UpdateDeviceRequest();
        inValue.Device = Device;
        UpdateDeviceResponse retVal = ((IGatewayService)(this)).UpdateDevice(inValue);
        return retVal.Result;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    RegisterSensorsResponse IGatewayService.RegisterSensors(RegisterSensorsRequest request)
    {
        return base.Channel.RegisterSensors(request);
    }
    
    public OperationResult RegisterSensors(Sensor[] Sensors)
    {
        RegisterSensorsRequest inValue = new RegisterSensorsRequest();
        inValue.Sensors = Sensors;
        RegisterSensorsResponse retVal = ((IGatewayService)(this)).RegisterSensors(inValue);
        return retVal.Result;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    UpdateSensorResponse IGatewayService.UpdateSensor(UpdateSensorRequest request)
    {
        return base.Channel.UpdateSensor(request);
    }
    
    public OperationResult UpdateSensor(Sensor Sensor)
    {
        UpdateSensorRequest inValue = new UpdateSensorRequest();
        inValue.Sensor = Sensor;
        UpdateSensorResponse retVal = ((IGatewayService)(this)).UpdateSensor(inValue);
        return retVal.Result;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetDevicesResponse IGatewayService.GetDevices(GetDevicesRequest request)
    {
        return base.Channel.GetDevices(request);
    }
    
    public GetDevicesResult GetDevices()
    {
        GetDevicesRequest inValue = new GetDevicesRequest();
        GetDevicesResponse retVal = ((IGatewayService)(this)).GetDevices(inValue);
        return retVal.Result;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetSensorsForDeviceResponse IGatewayService.GetSensorsForDevice(GetSensorsForDeviceRequest request)
    {
        return base.Channel.GetSensorsForDevice(request);
    }
    
    public GetSensorsForDeviceResult GetSensorsForDevice(string DeviceId)
    {
        GetSensorsForDeviceRequest inValue = new GetSensorsForDeviceRequest();
        inValue.DeviceId = DeviceId;
        GetSensorsForDeviceResponse retVal = ((IGatewayService)(this)).GetSensorsForDevice(inValue);
        return retVal.Result;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    IsDeviceIdUsedResponse IGatewayService.IsDeviceIdUsed(IsDeviceIdUsedRequest request)
    {
        return base.Channel.IsDeviceIdUsed(request);
    }
    
    public IsDeviceIdUsedResult IsDeviceIdUsed(string DeviceId)
    {
        IsDeviceIdUsedRequest inValue = new IsDeviceIdUsedRequest();
        inValue.DeviceId = DeviceId;
        IsDeviceIdUsedResponse retVal = ((IGatewayService)(this)).IsDeviceIdUsed(inValue);
        return retVal.Result;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    IsSensorIdRegisteredForDeviceResponse IGatewayService.IsSensorIdRegisteredForDevice(IsSensorIdRegisteredForDeviceRequest request)
    {
        return base.Channel.IsSensorIdRegisteredForDevice(request);
    }
    
    public IsSensorIdRegisteredForDeviceResult IsSensorIdRegisteredForDevice(string DeviceId, string SensorId)
    {
        IsSensorIdRegisteredForDeviceRequest inValue = new IsSensorIdRegisteredForDeviceRequest();
        inValue.DeviceId = DeviceId;
        inValue.SensorId = SensorId;
        IsSensorIdRegisteredForDeviceResponse retVal = ((IGatewayService)(this)).IsSensorIdRegisteredForDevice(inValue);
        return retVal.Result;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetSensorResponse IGatewayService.GetSensor(GetSensorRequest request)
    {
        return base.Channel.GetSensor(request);
    }
    
    public GetSensorResult GetSensor(string DeviceId, string SensorId)
    {
        GetSensorRequest inValue = new GetSensorRequest();
        inValue.DeviceId = DeviceId;
        inValue.SensorId = SensorId;
        GetSensorResponse retVal = ((IGatewayService)(this)).GetSensor(inValue);
        return retVal.Result;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetSensorDataResponse IGatewayService.GetSensorData(GetSensorDataRequest request)
    {
        return base.Channel.GetSensorData(request);
    }
    
    public GetMultipleSensorDataResult GetSensorData(string DeviceId, string[] Sensors, System.DateTime TakenFrom, System.DateTime TakenUntil, int MaxValues)
    {
        GetSensorDataRequest inValue = new GetSensorDataRequest();
        inValue.DeviceId = DeviceId;
        inValue.Sensors = Sensors;
        inValue.TakenFrom = TakenFrom;
        inValue.TakenUntil = TakenUntil;
        inValue.MaxValues = MaxValues;
        GetSensorDataResponse retVal = ((IGatewayService)(this)).GetSensorData(inValue);
        return retVal.Result;
    }
}
