//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.488
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://GatewaysService", ClrNamespace="GlobalDataContracts")]

namespace GlobalDataContracts
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorData", Namespace="http://GatewaysService")]
    public partial class SensorData : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime GeneratedWhenField;
        
        private string ValueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime GeneratedWhen
        {
            get
            {
                return this.GeneratedWhenField;
            }
            set
            {
                this.GeneratedWhenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResult", Namespace="http://GatewaysService")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GlobalDataContracts.GetDevicesResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GlobalDataContracts.GetSensorsForDeviceResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GlobalDataContracts.IsDeviceIdUsedResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GlobalDataContracts.IsSensorIdRegisteredForDeviceResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GlobalDataContracts.GetSensorResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GlobalDataContracts.GetMultipleSensorDataResult))]
    public partial class OperationResult : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ErrorMessagesField;
        
        private bool SuccessField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessages
        {
            get
            {
                return this.ErrorMessagesField;
            }
            set
            {
                this.ErrorMessagesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success
        {
            get
            {
                return this.SuccessField;
            }
            set
            {
                this.SuccessField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDevicesResult", Namespace="http://GatewaysService")]
    public partial class GetDevicesResult : GlobalDataContracts.OperationResult
    {
        
        private GlobalDataContracts.Device[] DevicesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GlobalDataContracts.Device[] Devices
        {
            get
            {
                return this.DevicesField;
            }
            set
            {
                this.DevicesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSensorsForDeviceResult", Namespace="http://GatewaysService")]
    public partial class GetSensorsForDeviceResult : GlobalDataContracts.OperationResult
    {
        
        private GlobalDataContracts.Sensor[] SensorsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GlobalDataContracts.Sensor[] Sensors
        {
            get
            {
                return this.SensorsField;
            }
            set
            {
                this.SensorsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IsDeviceIdUsedResult", Namespace="http://GatewaysService")]
    public partial class IsDeviceIdUsedResult : GlobalDataContracts.OperationResult
    {
        
        private bool IsUsedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUsed
        {
            get
            {
                return this.IsUsedField;
            }
            set
            {
                this.IsUsedField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IsSensorIdRegisteredForDeviceResult", Namespace="http://GatewaysService")]
    public partial class IsSensorIdRegisteredForDeviceResult : GlobalDataContracts.OperationResult
    {
        
        private bool IsRegisteredField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRegistered
        {
            get
            {
                return this.IsRegisteredField;
            }
            set
            {
                this.IsRegisteredField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSensorResult", Namespace="http://GatewaysService")]
    public partial class GetSensorResult : GlobalDataContracts.OperationResult
    {
        
        private GlobalDataContracts.Sensor SensorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GlobalDataContracts.Sensor Sensor
        {
            get
            {
                return this.SensorField;
            }
            set
            {
                this.SensorField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMultipleSensorDataResult", Namespace="http://GatewaysService")]
    public partial class GetMultipleSensorDataResult : GlobalDataContracts.OperationResult
    {
        
        private GlobalDataContracts.MultipleSensorData[] SensorDataListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GlobalDataContracts.MultipleSensorData[] SensorDataList
        {
            get
            {
                return this.SensorDataListField;
            }
            set
            {
                this.SensorDataListField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Device", Namespace="http://GatewaysService")]
    public partial class Device : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DescriptionField;
        
        private string DeviceIpEndPointField;
        
        private string IdField;
        
        private GlobalDataContracts.Location LocationField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceIpEndPoint
        {
            get
            {
                return this.DeviceIpEndPointField;
            }
            set
            {
                this.DeviceIpEndPointField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GlobalDataContracts.Location Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                this.LocationField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://GatewaysService")]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double ElevationField;
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        private string NameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Elevation
        {
            get
            {
                return this.ElevationField;
            }
            set
            {
                this.ElevationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude
        {
            get
            {
                return this.LatitudeField;
            }
            set
            {
                this.LatitudeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude
        {
            get
            {
                return this.LongitudeField;
            }
            set
            {
                this.LongitudeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sensor", Namespace="http://GatewaysService")]
    public partial class Sensor : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CategoryField;
        
        private string DescriptionField;
        
        private string DeviceIdField;
        
        private string IdField;
        
        private int InternalSensorIdField;
        
        private bool IsVirtualSensorField;
        
        private bool PersistDirectlyAfterChangeField;
        
        private int PullFrequencyInSecondsField;
        
        private GlobalDataContracts.PullModeCommunicationType PullModeCommunicationTypeField;
        
        private string PullModeDotNetObjectTypeField;
        
        private GlobalDataContracts.SensorDataRetrievalMode SensorDataRetrievalModeField;
        
        private GlobalDataContracts.SensorValueDataType SensorValueDataTypeField;
        
        private bool ShallSensorDataBePersistedField;
        
        private string UnitSymbolField;
        
        private GlobalDataContracts.VirtualSensorDefinition VirtualSensorDefinitionField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category
        {
            get
            {
                return this.CategoryField;
            }
            set
            {
                this.CategoryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceId
        {
            get
            {
                return this.DeviceIdField;
            }
            set
            {
                this.DeviceIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InternalSensorId
        {
            get
            {
                return this.InternalSensorIdField;
            }
            set
            {
                this.InternalSensorIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVirtualSensor
        {
            get
            {
                return this.IsVirtualSensorField;
            }
            set
            {
                this.IsVirtualSensorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PersistDirectlyAfterChange
        {
            get
            {
                return this.PersistDirectlyAfterChangeField;
            }
            set
            {
                this.PersistDirectlyAfterChangeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PullFrequencyInSeconds
        {
            get
            {
                return this.PullFrequencyInSecondsField;
            }
            set
            {
                this.PullFrequencyInSecondsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GlobalDataContracts.PullModeCommunicationType PullModeCommunicationType
        {
            get
            {
                return this.PullModeCommunicationTypeField;
            }
            set
            {
                this.PullModeCommunicationTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PullModeDotNetObjectType
        {
            get
            {
                return this.PullModeDotNetObjectTypeField;
            }
            set
            {
                this.PullModeDotNetObjectTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GlobalDataContracts.SensorDataRetrievalMode SensorDataRetrievalMode
        {
            get
            {
                return this.SensorDataRetrievalModeField;
            }
            set
            {
                this.SensorDataRetrievalModeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GlobalDataContracts.SensorValueDataType SensorValueDataType
        {
            get
            {
                return this.SensorValueDataTypeField;
            }
            set
            {
                this.SensorValueDataTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShallSensorDataBePersisted
        {
            get
            {
                return this.ShallSensorDataBePersistedField;
            }
            set
            {
                this.ShallSensorDataBePersistedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitSymbol
        {
            get
            {
                return this.UnitSymbolField;
            }
            set
            {
                this.UnitSymbolField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GlobalDataContracts.VirtualSensorDefinition VirtualSensorDefinition
        {
            get
            {
                return this.VirtualSensorDefinitionField;
            }
            set
            {
                this.VirtualSensorDefinitionField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VirtualSensorDefinition", Namespace="http://GatewaysService")]
    public partial class VirtualSensorDefinition : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DefinitionField;
        
        private GlobalDataContracts.VirtualSensorCalculationType VirtualSensorCalculationTypeField;
        
        private GlobalDataContracts.VirtualSensorDefinitionType VirtualSensorDefinitionTypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Definition
        {
            get
            {
                return this.DefinitionField;
            }
            set
            {
                this.DefinitionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GlobalDataContracts.VirtualSensorCalculationType VirtualSensorCalculationType
        {
            get
            {
                return this.VirtualSensorCalculationTypeField;
            }
            set
            {
                this.VirtualSensorCalculationTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GlobalDataContracts.VirtualSensorDefinitionType VirtualSensorDefinitionType
        {
            get
            {
                return this.VirtualSensorDefinitionTypeField;
            }
            set
            {
                this.VirtualSensorDefinitionTypeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PullModeCommunicationType", Namespace="http://GatewaysService")]
    public enum PullModeCommunicationType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REST = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SOAP = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DotNetObject = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorDataRetrievalMode", Namespace="http://GatewaysService")]
    public enum SensorDataRetrievalMode : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pull = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Push = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Both = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PushOnChange = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorValueDataType", Namespace="http://GatewaysService")]
    public enum SensorValueDataType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bit = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Int = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Long = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Decimal = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        String = 18,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VirtualSensorCalculationType", Namespace="http://GatewaysService")]
    public enum VirtualSensorCalculationType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cyclic = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnChange = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnRequest = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VirtualSensorDefinitionType", Namespace="http://GatewaysService")]
    public enum VirtualSensorDefinitionType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Formula = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSharpExpression = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CSharpExpression = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IronPhyton = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IronRuby = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DotNetObject = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SQL = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultipleSensorData", Namespace="http://GatewaysService")]
    public partial class MultipleSensorData : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private GlobalDataContracts.SensorData[] MeasuresField;
        
        private string SensorIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GlobalDataContracts.SensorData[] Measures
        {
            get
            {
                return this.MeasuresField;
            }
            set
            {
                this.MeasuresField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SensorId
        {
            get
            {
                return this.SensorIdField;
            }
            set
            {
                this.SensorIdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://GatewaysService", ConfigurationName="GlobalDataContracts.IGatewayService")]
    public interface IGatewayService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://GatewaysService/IGatewayService/StoreSingleSensorData", ReplyAction="http://GatewaysService/IGatewayService/StoreSingleSensorDataResponse")]
        GlobalDataContracts.OperationResult StoreSingleSensorData(string deviceId, string sensorId, GlobalDataContracts.SensorData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://GatewaysService/IGatewayService/RegisterDevice", ReplyAction="http://GatewaysService/IGatewayService/RegisterDeviceResponse")]
        GlobalDataContracts.OperationResult RegisterDevice(GlobalDataContracts.Device device);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://GatewaysService/IGatewayService/UpdateDevice", ReplyAction="http://GatewaysService/IGatewayService/UpdateDeviceResponse")]
        GlobalDataContracts.OperationResult UpdateDevice(GlobalDataContracts.Device device);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://GatewaysService/IGatewayService/RegisterSensors", ReplyAction="http://GatewaysService/IGatewayService/RegisterSensorsResponse")]
        GlobalDataContracts.OperationResult RegisterSensors(GlobalDataContracts.Sensor[] sensorList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://GatewaysService/IGatewayService/UpdateSensor", ReplyAction="http://GatewaysService/IGatewayService/UpdateSensorResponse")]
        GlobalDataContracts.OperationResult UpdateSensor(GlobalDataContracts.Sensor sensor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://GatewaysService/IGatewayService/GetDevices", ReplyAction="http://GatewaysService/IGatewayService/GetDevicesResponse")]
        GlobalDataContracts.GetDevicesResult GetDevices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://GatewaysService/IGatewayService/GetDevicesByIds", ReplyAction="http://GatewaysService/IGatewayService/GetDevicesByIdsResponse")]
        GlobalDataContracts.GetDevicesResult GetDevicesByIds(string[] deviceIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://GatewaysService/IGatewayService/GetSensorsForDevice", ReplyAction="http://GatewaysService/IGatewayService/GetSensorsForDeviceResponse")]
        GlobalDataContracts.GetSensorsForDeviceResult GetSensorsForDevice(string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://GatewaysService/IGatewayService/IsDeviceIdUsed", ReplyAction="http://GatewaysService/IGatewayService/IsDeviceIdUsedResponse")]
        GlobalDataContracts.IsDeviceIdUsedResult IsDeviceIdUsed(string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://GatewaysService/IGatewayService/IsSensorIdRegisteredForDevice", ReplyAction="http://GatewaysService/IGatewayService/IsSensorIdRegisteredForDeviceResponse")]
        GlobalDataContracts.IsSensorIdRegisteredForDeviceResult IsSensorIdRegisteredForDevice(string deviceId, string sensorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://GatewaysService/IGatewayService/GetSensor", ReplyAction="http://GatewaysService/IGatewayService/GetSensorResponse")]
        GlobalDataContracts.GetSensorResult GetSensor(string deviceId, string sensorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://GatewaysService/IGatewayService/GetSensorData", ReplyAction="http://GatewaysService/IGatewayService/GetSensorDataResponse")]
        GlobalDataContracts.GetMultipleSensorDataResult GetSensorData(string deviceId, string[] sensors, System.DateTime generatedAfter, System.DateTime generatedBefore, int maxValuesToDeliverPerSensor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://GatewaysService/IGatewayService/GetSensorDataLatest", ReplyAction="http://GatewaysService/IGatewayService/GetSensorDataLatestResponse")]
        GlobalDataContracts.GetMultipleSensorDataResult GetSensorDataLatest(string deviceId, string[] sensors, int maxValuesToDeliverPerSensor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://GatewaysService/IGatewayService/StoreSensorData", ReplyAction="http://GatewaysService/IGatewayService/StoreSensorDataResponse")]
        GlobalDataContracts.OperationResult StoreSensorData(string deviceId, GlobalDataContracts.MultipleSensorData[] data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGatewayServiceChannel : GlobalDataContracts.IGatewayService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GatewayServiceClient : System.ServiceModel.ClientBase<GlobalDataContracts.IGatewayService>, GlobalDataContracts.IGatewayService
    {
        
        public GatewayServiceClient()
        {
        }
        
        public GatewayServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public GatewayServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public GatewayServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public GatewayServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public GlobalDataContracts.OperationResult StoreSingleSensorData(string deviceId, string sensorId, GlobalDataContracts.SensorData data)
        {
            return base.Channel.StoreSingleSensorData(deviceId, sensorId, data);
        }
        
        public GlobalDataContracts.OperationResult RegisterDevice(GlobalDataContracts.Device device)
        {
            return base.Channel.RegisterDevice(device);
        }
        
        public GlobalDataContracts.OperationResult UpdateDevice(GlobalDataContracts.Device device)
        {
            return base.Channel.UpdateDevice(device);
        }
        
        public GlobalDataContracts.OperationResult RegisterSensors(GlobalDataContracts.Sensor[] sensorList)
        {
            return base.Channel.RegisterSensors(sensorList);
        }
        
        public GlobalDataContracts.OperationResult UpdateSensor(GlobalDataContracts.Sensor sensor)
        {
            return base.Channel.UpdateSensor(sensor);
        }
        
        public GlobalDataContracts.GetDevicesResult GetDevices()
        {
            return base.Channel.GetDevices();
        }
        
        public GlobalDataContracts.GetDevicesResult GetDevicesByIds(string[] deviceIds)
        {
            return base.Channel.GetDevicesByIds(deviceIds);
        }
        
        public GlobalDataContracts.GetSensorsForDeviceResult GetSensorsForDevice(string deviceId)
        {
            return base.Channel.GetSensorsForDevice(deviceId);
        }
        
        public GlobalDataContracts.IsDeviceIdUsedResult IsDeviceIdUsed(string deviceId)
        {
            return base.Channel.IsDeviceIdUsed(deviceId);
        }
        
        public GlobalDataContracts.IsSensorIdRegisteredForDeviceResult IsSensorIdRegisteredForDevice(string deviceId, string sensorId)
        {
            return base.Channel.IsSensorIdRegisteredForDevice(deviceId, sensorId);
        }
        
        public GlobalDataContracts.GetSensorResult GetSensor(string deviceId, string sensorId)
        {
            return base.Channel.GetSensor(deviceId, sensorId);
        }
        
        public GlobalDataContracts.GetMultipleSensorDataResult GetSensorData(string deviceId, string[] sensors, System.DateTime generatedAfter, System.DateTime generatedBefore, int maxValuesToDeliverPerSensor)
        {
            return base.Channel.GetSensorData(deviceId, sensors, generatedAfter, generatedBefore, maxValuesToDeliverPerSensor);
        }
        
        public GlobalDataContracts.GetMultipleSensorDataResult GetSensorDataLatest(string deviceId, string[] sensors, int maxValuesToDeliverPerSensor)
        {
            return base.Channel.GetSensorDataLatest(deviceId, sensors, maxValuesToDeliverPerSensor);
        }
        
        public GlobalDataContracts.OperationResult StoreSensorData(string deviceId, GlobalDataContracts.MultipleSensorData[] data)
        {
            return base.Channel.StoreSensorData(deviceId, data);
        }
    }
}

