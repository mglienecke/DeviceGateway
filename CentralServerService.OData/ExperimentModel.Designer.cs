//------------------------------------------------------------------------------
// <auto-generated>
//    Dieser Code wurde aus einer Vorlage generiert.
//
//    Manuelle Änderungen an dieser Datei führen möglicherweise zu unerwartetem Verhalten Ihrer Anwendung.
//    Manuelle Änderungen an dieser Datei werden überschrieben, wenn der Code neu generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM-Beziehungsmetadaten

[assembly: EdmRelationshipAttribute("ExperimentsModel", "FK_DbSensor_DbDevice", "DbDevice", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CentralServerService.OData.DbDevice), "DbSensor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CentralServerService.OData.DbSensor), true)]

#endregion

namespace CentralServerService.OData
{
    #region Kontexte
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    public partial class ExperimentsEntities : ObjectContext
    {
        #region Konstruktoren
    
        /// <summary>
        /// Initialisiert ein neues ExperimentsEntities-Objekt mithilfe der in Abschnitt 'ExperimentsEntities' der Anwendungskonfigurationsdatei gefundenen Verbindungszeichenfolge.
        /// </summary>
        public ExperimentsEntities() : base("name=ExperimentsEntities", "ExperimentsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues ExperimentsEntities-Objekt.
        /// </summary>
        public ExperimentsEntities(string connectionString) : base(connectionString, "ExperimentsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues ExperimentsEntities-Objekt.
        /// </summary>
        public ExperimentsEntities(EntityConnection connection) : base(connection, "ExperimentsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partielle Methoden
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet-Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<DbDevice> DbDevices
        {
            get
            {
                if ((_DbDevices == null))
                {
                    _DbDevices = base.CreateObjectSet<DbDevice>("DbDevices");
                }
                return _DbDevices;
            }
        }
        private ObjectSet<DbDevice> _DbDevices;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<DbSensor> DbSensors
        {
            get
            {
                if ((_DbSensors == null))
                {
                    _DbSensors = base.CreateObjectSet<DbSensor>("DbSensors");
                }
                return _DbSensors;
            }
        }
        private ObjectSet<DbSensor> _DbSensors;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<DbSensorData> DbSensorDatas
        {
            get
            {
                if ((_DbSensorDatas == null))
                {
                    _DbSensorDatas = base.CreateObjectSet<DbSensorData>("DbSensorDatas");
                }
                return _DbSensorDatas;
            }
        }
        private ObjectSet<DbSensorData> _DbSensorDatas;

        #endregion
        #region AddTo-Methoden
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'DbDevices'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToDbDevices(DbDevice dbDevice)
        {
            base.AddObject("DbDevices", dbDevice);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'DbSensors'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToDbSensors(DbSensor dbSensor)
        {
            base.AddObject("DbSensors", dbSensor);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'DbSensorDatas'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToDbSensorDatas(DbSensorData dbSensorData)
        {
            base.AddObject("DbSensorDatas", dbSensorData);
        }

        #endregion
    }
    

    #endregion
    
    #region Entitäten
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExperimentsModel", Name="DbDevice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DbDevice : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues DbDevice-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft Id.</param>
        /// <param name="description">Anfangswert der Eigenschaft Description.</param>
        /// <param name="ipEndPoint">Anfangswert der Eigenschaft IpEndPoint.</param>
        public static DbDevice CreateDbDevice(global::System.String id, global::System.String description, global::System.String ipEndPoint)
        {
            DbDevice dbDevice = new DbDevice();
            dbDevice.Id = id;
            dbDevice.Description = description;
            dbDevice.IpEndPoint = ipEndPoint;
            return dbDevice;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IpEndPoint
        {
            get
            {
                return _IpEndPoint;
            }
            set
            {
                OnIpEndPointChanging(value);
                ReportPropertyChanging("IpEndPoint");
                _IpEndPoint = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IpEndPoint");
                OnIpEndPointChanged();
            }
        }
        private global::System.String _IpEndPoint;
        partial void OnIpEndPointChanging(global::System.String value);
        partial void OnIpEndPointChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocationName
        {
            get
            {
                return _LocationName;
            }
            set
            {
                OnLocationNameChanging(value);
                ReportPropertyChanging("LocationName");
                _LocationName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LocationName");
                OnLocationNameChanged();
            }
        }
        private global::System.String _LocationName;
        partial void OnLocationNameChanging(global::System.String value);
        partial void OnLocationNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Latitude;
        partial void OnLatitudeChanging(Nullable<global::System.Decimal> value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Longitude;
        partial void OnLongitudeChanging(Nullable<global::System.Decimal> value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Elevation
        {
            get
            {
                return _Elevation;
            }
            set
            {
                OnElevationChanging(value);
                ReportPropertyChanging("Elevation");
                _Elevation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Elevation");
                OnElevationChanged();
            }
        }
        private Nullable<global::System.Decimal> _Elevation;
        partial void OnElevationChanging(Nullable<global::System.Decimal> value);
        partial void OnElevationChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExperimentsModel", "FK_DbSensor_DbDevice", "DbSensor")]
        public EntityCollection<DbSensor> DbSensors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DbSensor>("ExperimentsModel.FK_DbSensor_DbDevice", "DbSensor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DbSensor>("ExperimentsModel.FK_DbSensor_DbDevice", "DbSensor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExperimentsModel", Name="DbSensor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DbSensor : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues DbSensor-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft Id.</param>
        /// <param name="deviceId">Anfangswert der Eigenschaft DeviceId.</param>
        /// <param name="sensorId">Anfangswert der Eigenschaft SensorId.</param>
        /// <param name="description">Anfangswert der Eigenschaft Description.</param>
        /// <param name="unitSymbol">Anfangswert der Eigenschaft UnitSymbol.</param>
        /// <param name="sensorValueDataType">Anfangswert der Eigenschaft SensorValueDataType.</param>
        /// <param name="sensorDataRetrievalMode">Anfangswert der Eigenschaft SensorDataRetrievalMode.</param>
        /// <param name="shallSensorDataBePersisted">Anfangswert der Eigenschaft ShallSensorDataBePersisted.</param>
        /// <param name="persistDirectlyAfterChange">Anfangswert der Eigenschaft PersistDirectlyAfterChange.</param>
        /// <param name="isVirtualSensor">Anfangswert der Eigenschaft IsVirtualSensor.</param>
        /// <param name="sensorDataCalculationMode">Anfangswert der Eigenschaft SensorDataCalculationMode.</param>
        /// <param name="virtualSensorDefinitionType">Anfangswert der Eigenschaft VirtualSensorDefinitionType.</param>
        /// <param name="pullModeCommunicationType">Anfangswert der Eigenschaft PullModeCommunicationType.</param>
        /// <param name="pullFrequencyInSec">Anfangswert der Eigenschaft PullFrequencyInSec.</param>
        public static DbSensor CreateDbSensor(global::System.String id, global::System.String deviceId, global::System.Int32 sensorId, global::System.String description, global::System.String unitSymbol, global::System.Int32 sensorValueDataType, global::System.Int32 sensorDataRetrievalMode, global::System.Boolean shallSensorDataBePersisted, global::System.Boolean persistDirectlyAfterChange, global::System.Boolean isVirtualSensor, global::System.Int32 sensorDataCalculationMode, global::System.Int32 virtualSensorDefinitionType, global::System.Int32 pullModeCommunicationType, global::System.Int32 pullFrequencyInSec)
        {
            DbSensor dbSensor = new DbSensor();
            dbSensor.Id = id;
            dbSensor.DeviceId = deviceId;
            dbSensor.SensorId = sensorId;
            dbSensor.Description = description;
            dbSensor.UnitSymbol = unitSymbol;
            dbSensor.SensorValueDataType = sensorValueDataType;
            dbSensor.SensorDataRetrievalMode = sensorDataRetrievalMode;
            dbSensor.ShallSensorDataBePersisted = shallSensorDataBePersisted;
            dbSensor.PersistDirectlyAfterChange = persistDirectlyAfterChange;
            dbSensor.IsVirtualSensor = isVirtualSensor;
            dbSensor.SensorDataCalculationMode = sensorDataCalculationMode;
            dbSensor.VirtualSensorDefinitionType = virtualSensorDefinitionType;
            dbSensor.PullModeCommunicationType = pullModeCommunicationType;
            dbSensor.PullFrequencyInSec = pullFrequencyInSec;
            return dbSensor;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeviceId
        {
            get
            {
                return _DeviceId;
            }
            set
            {
                if (_DeviceId != value)
                {
                    OnDeviceIdChanging(value);
                    ReportPropertyChanging("DeviceId");
                    _DeviceId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DeviceId");
                    OnDeviceIdChanged();
                }
            }
        }
        private global::System.String _DeviceId;
        partial void OnDeviceIdChanging(global::System.String value);
        partial void OnDeviceIdChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SensorId
        {
            get
            {
                return _SensorId;
            }
            set
            {
                OnSensorIdChanging(value);
                ReportPropertyChanging("SensorId");
                _SensorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SensorId");
                OnSensorIdChanged();
            }
        }
        private global::System.Int32 _SensorId;
        partial void OnSensorIdChanging(global::System.Int32 value);
        partial void OnSensorIdChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UnitSymbol
        {
            get
            {
                return _UnitSymbol;
            }
            set
            {
                OnUnitSymbolChanging(value);
                ReportPropertyChanging("UnitSymbol");
                _UnitSymbol = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UnitSymbol");
                OnUnitSymbolChanged();
            }
        }
        private global::System.String _UnitSymbol;
        partial void OnUnitSymbolChanging(global::System.String value);
        partial void OnUnitSymbolChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SensorValueDataType
        {
            get
            {
                return _SensorValueDataType;
            }
            set
            {
                OnSensorValueDataTypeChanging(value);
                ReportPropertyChanging("SensorValueDataType");
                _SensorValueDataType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SensorValueDataType");
                OnSensorValueDataTypeChanged();
            }
        }
        private global::System.Int32 _SensorValueDataType;
        partial void OnSensorValueDataTypeChanging(global::System.Int32 value);
        partial void OnSensorValueDataTypeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SensorDataRetrievalMode
        {
            get
            {
                return _SensorDataRetrievalMode;
            }
            set
            {
                OnSensorDataRetrievalModeChanging(value);
                ReportPropertyChanging("SensorDataRetrievalMode");
                _SensorDataRetrievalMode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SensorDataRetrievalMode");
                OnSensorDataRetrievalModeChanged();
            }
        }
        private global::System.Int32 _SensorDataRetrievalMode;
        partial void OnSensorDataRetrievalModeChanging(global::System.Int32 value);
        partial void OnSensorDataRetrievalModeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShallSensorDataBePersisted
        {
            get
            {
                return _ShallSensorDataBePersisted;
            }
            set
            {
                OnShallSensorDataBePersistedChanging(value);
                ReportPropertyChanging("ShallSensorDataBePersisted");
                _ShallSensorDataBePersisted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShallSensorDataBePersisted");
                OnShallSensorDataBePersistedChanged();
            }
        }
        private global::System.Boolean _ShallSensorDataBePersisted;
        partial void OnShallSensorDataBePersistedChanging(global::System.Boolean value);
        partial void OnShallSensorDataBePersistedChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PersistDirectlyAfterChange
        {
            get
            {
                return _PersistDirectlyAfterChange;
            }
            set
            {
                OnPersistDirectlyAfterChangeChanging(value);
                ReportPropertyChanging("PersistDirectlyAfterChange");
                _PersistDirectlyAfterChange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersistDirectlyAfterChange");
                OnPersistDirectlyAfterChangeChanged();
            }
        }
        private global::System.Boolean _PersistDirectlyAfterChange;
        partial void OnPersistDirectlyAfterChangeChanging(global::System.Boolean value);
        partial void OnPersistDirectlyAfterChangeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVirtualSensor
        {
            get
            {
                return _IsVirtualSensor;
            }
            set
            {
                OnIsVirtualSensorChanging(value);
                ReportPropertyChanging("IsVirtualSensor");
                _IsVirtualSensor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVirtualSensor");
                OnIsVirtualSensorChanged();
            }
        }
        private global::System.Boolean _IsVirtualSensor;
        partial void OnIsVirtualSensorChanging(global::System.Boolean value);
        partial void OnIsVirtualSensorChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SensorCategory
        {
            get
            {
                return _SensorCategory;
            }
            set
            {
                OnSensorCategoryChanging(value);
                ReportPropertyChanging("SensorCategory");
                _SensorCategory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SensorCategory");
                OnSensorCategoryChanged();
            }
        }
        private global::System.String _SensorCategory;
        partial void OnSensorCategoryChanging(global::System.String value);
        partial void OnSensorCategoryChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SensorDataCalculationMode
        {
            get
            {
                return _SensorDataCalculationMode;
            }
            set
            {
                OnSensorDataCalculationModeChanging(value);
                ReportPropertyChanging("SensorDataCalculationMode");
                _SensorDataCalculationMode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SensorDataCalculationMode");
                OnSensorDataCalculationModeChanged();
            }
        }
        private global::System.Int32 _SensorDataCalculationMode;
        partial void OnSensorDataCalculationModeChanging(global::System.Int32 value);
        partial void OnSensorDataCalculationModeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VirtualSensorDefinitionType
        {
            get
            {
                return _VirtualSensorDefinitionType;
            }
            set
            {
                OnVirtualSensorDefinitionTypeChanging(value);
                ReportPropertyChanging("VirtualSensorDefinitionType");
                _VirtualSensorDefinitionType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VirtualSensorDefinitionType");
                OnVirtualSensorDefinitionTypeChanged();
            }
        }
        private global::System.Int32 _VirtualSensorDefinitionType;
        partial void OnVirtualSensorDefinitionTypeChanging(global::System.Int32 value);
        partial void OnVirtualSensorDefinitionTypeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VirtualSensorDefininition
        {
            get
            {
                return _VirtualSensorDefininition;
            }
            set
            {
                OnVirtualSensorDefininitionChanging(value);
                ReportPropertyChanging("VirtualSensorDefininition");
                _VirtualSensorDefininition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VirtualSensorDefininition");
                OnVirtualSensorDefininitionChanged();
            }
        }
        private global::System.String _VirtualSensorDefininition;
        partial void OnVirtualSensorDefininitionChanging(global::System.String value);
        partial void OnVirtualSensorDefininitionChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PullModeCommunicationType
        {
            get
            {
                return _PullModeCommunicationType;
            }
            set
            {
                OnPullModeCommunicationTypeChanging(value);
                ReportPropertyChanging("PullModeCommunicationType");
                _PullModeCommunicationType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PullModeCommunicationType");
                OnPullModeCommunicationTypeChanged();
            }
        }
        private global::System.Int32 _PullModeCommunicationType;
        partial void OnPullModeCommunicationTypeChanging(global::System.Int32 value);
        partial void OnPullModeCommunicationTypeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PullModeDotNetType
        {
            get
            {
                return _PullModeDotNetType;
            }
            set
            {
                OnPullModeDotNetTypeChanging(value);
                ReportPropertyChanging("PullModeDotNetType");
                _PullModeDotNetType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PullModeDotNetType");
                OnPullModeDotNetTypeChanged();
            }
        }
        private global::System.String _PullModeDotNetType;
        partial void OnPullModeDotNetTypeChanging(global::System.String value);
        partial void OnPullModeDotNetTypeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PullFrequencyInSec
        {
            get
            {
                return _PullFrequencyInSec;
            }
            set
            {
                OnPullFrequencyInSecChanging(value);
                ReportPropertyChanging("PullFrequencyInSec");
                _PullFrequencyInSec = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PullFrequencyInSec");
                OnPullFrequencyInSecChanged();
            }
        }
        private global::System.Int32 _PullFrequencyInSec;
        partial void OnPullFrequencyInSecChanging(global::System.Int32 value);
        partial void OnPullFrequencyInSecChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExperimentsModel", "FK_DbSensor_DbDevice", "DbDevice")]
        public DbDevice DbDevice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DbDevice>("ExperimentsModel.FK_DbSensor_DbDevice", "DbDevice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DbDevice>("ExperimentsModel.FK_DbSensor_DbDevice", "DbDevice").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DbDevice> DbDeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DbDevice>("ExperimentsModel.FK_DbSensor_DbDevice", "DbDevice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DbDevice>("ExperimentsModel.FK_DbSensor_DbDevice", "DbDevice", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExperimentsModel", Name="DbSensorData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DbSensorData : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues DbSensorData-Objekt.
        /// </summary>
        /// <param name="identity">Anfangswert der Eigenschaft Identity.</param>
        /// <param name="sensorId">Anfangswert der Eigenschaft SensorId.</param>
        /// <param name="takenWhen">Anfangswert der Eigenschaft TakenWhen.</param>
        /// <param name="value">Anfangswert der Eigenschaft Value.</param>
        public static DbSensorData CreateDbSensorData(global::System.Int32 identity, global::System.Int32 sensorId, global::System.DateTime takenWhen, global::System.String value)
        {
            DbSensorData dbSensorData = new DbSensorData();
            dbSensorData.Identity = identity;
            dbSensorData.SensorId = sensorId;
            dbSensorData.TakenWhen = takenWhen;
            dbSensorData.Value = value;
            return dbSensorData;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Identity
        {
            get
            {
                return _Identity;
            }
            set
            {
                if (_Identity != value)
                {
                    OnIdentityChanging(value);
                    ReportPropertyChanging("Identity");
                    _Identity = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Identity");
                    OnIdentityChanged();
                }
            }
        }
        private global::System.Int32 _Identity;
        partial void OnIdentityChanging(global::System.Int32 value);
        partial void OnIdentityChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SensorId
        {
            get
            {
                return _SensorId;
            }
            set
            {
                OnSensorIdChanging(value);
                ReportPropertyChanging("SensorId");
                _SensorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SensorId");
                OnSensorIdChanged();
            }
        }
        private global::System.Int32 _SensorId;
        partial void OnSensorIdChanging(global::System.Int32 value);
        partial void OnSensorIdChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TakenWhen
        {
            get
            {
                return _TakenWhen;
            }
            set
            {
                OnTakenWhenChanging(value);
                ReportPropertyChanging("TakenWhen");
                _TakenWhen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TakenWhen");
                OnTakenWhenChanged();
            }
        }
        private global::System.DateTime _TakenWhen;
        partial void OnTakenWhenChanging(global::System.DateTime value);
        partial void OnTakenWhenChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
    }

    #endregion
    
}
